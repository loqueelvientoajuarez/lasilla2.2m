#! /usr/bin/env python3

import os
import sys

sys.path.append('/home/lachaume/Dropbox/python/')
from MPG.utils import argparser

from MPG import schedule as sch

if __name__ == "__main__":
    parser = argparser(
                description='Schedule parser for the MPG 2.2m telescope')
    parser.add_argument('period', nargs='+',
        help='ESO period(s)', 
        action='store', type=int)
    parser.add_argument('--parse', action='store_true', default=False,
        help='Parse Excel schedule and write a nice HTML one')
    parser.add_argument('--download', action='store_true', default=False,
        help='Download from MPG web site')
    parser.add_argument('-v', '--verbose', action='count',
        help='Display information about process')
    arg = parser.parse_args()
    path, tel = arg.dir, arg.tel
    for period in arg.period:
        if arg.verbose:
            print('period', period)
        if arg.download:
            if arg.verbose:
                print('  download schedule from MPIA.de')
            sch.retrieve_xls_schedule(tel, period, path=path)
        if arg.parse:
            if arg.verbose:
                print('  load schedule')
            sheet = sch.load_xlsx_schedule(tel, period, path=path)
            if arg.verbose:
                print('  parse schedule')
            data = sch.parse_xlsx_schedule(tel, period, path=path)
            if arg.verbose:
                print('  write schedule as HTML table')
            sch.write_html_schedule(data, tel, period, path=path)
            sch.write_html_shifts(data, tel, period, path=path)
            # period <= 101
            # schedule = sch.parse_xls_schedule(tel, period, path=path)
            # sch.write_html_schedule(tel, period, schedule, path=path)
            # sch.write_html_shifts(tel, period, schedule, path=path)
        if arg.publish:
            if arg.verbose:
                print('  publish schedule to PUC.cl')
            sch.publish_html_schedule(tel, period, rdir=arg.rdir, path=path)

